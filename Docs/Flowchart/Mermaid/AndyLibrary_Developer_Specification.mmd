
flowchart TD
    %% DETAILED DEVELOPER SPECIFICATION FLOWCHART
    %% Visual Code Review Quality - Shows Every UI Element, Validation, User Option
    
    %% === INITIAL PAGE LOAD ===
    START([USER OPENS BROWSER<br/>URL: https://andylibrary.com])
    
    LOAD_ASSETS[LOAD WEBSITE ASSETS<br/>‚Ä¢ index.html loads<br/>‚Ä¢ CSS: /static/styles.css<br/>‚Ä¢ JS: /static/app.js<br/>‚Ä¢ Service Worker: /service-worker.js<br/>‚Ä¢ Favicon, images load<br/>‚Ä¢ Show loading spinner]
    
    CHECK_SESSION[CHECK EXISTING SESSION<br/>API: GET /api/auth/session<br/>‚Ä¢ Read sessionStorage.authToken<br/>‚Ä¢ Read localStorage.userPrefs<br/>‚Ä¢ Validate session server-side<br/>‚Ä¢ Check cookie expiration]
    
    SESSION_DECISION{SESSION VALID?<br/>Token exists & not expired?}
    
    %% === MAIN LANDING PAGE LAYOUT ===
    SHOW_LANDING[DISPLAY LANDING PAGE<br/>===== HEADER =====<br/>‚Ä¢ Logo: AndyLibrary üèõÔ∏è<br/>‚Ä¢ Navigation: Home | About | Contact<br/>‚Ä¢ Theme toggle: Light/Dark<br/>===== MAIN CONTENT =====<br/>‚Ä¢ Hero text: "Educational Access for All"<br/>‚Ä¢ Mission statement paragraph<br/>‚Ä¢ Search bar (disabled - requires auth)<br/>===== AUTH SECTION =====<br/>‚Ä¢ "Sign In" button (blue, prominent)<br/>‚Ä¢ "Register" button (green, secondary)<br/>‚Ä¢ "Guest Browse" link (small, gray)<br/>===== FOOTER =====<br/>‚Ä¢ Privacy Policy | Terms | Support]
    
    AUTH_CHOICE{USER CLICKS?<br/>What action does user take?}
    
    %% === REGISTRATION FLOW START ===
    SHOW_REGISTER_FORM[DISPLAY REGISTRATION FORM<br/>===== FORM LAYOUT =====<br/>Header: "Create Your Account"<br/>Subtitle: "Join thousands of learners worldwide"<br/><br/>===== REQUIRED FIELDS =====<br/>üìß Email Address: [text input]<br/>   ‚Ä¢ Placeholder: "your@email.com"<br/>   ‚Ä¢ Real-time validation icon<br/>   ‚Ä¢ Error div below (hidden)<br/><br/>üë§ Username: [text input]<br/>   ‚Ä¢ Placeholder: "johndoe123"<br/>   ‚Ä¢ Min 3, max 20 chars<br/>   ‚Ä¢ Availability check icon<br/>   ‚Ä¢ Error div below (hidden)<br/><br/>üîí Password: [password input]<br/>   ‚Ä¢ Placeholder: "8+ characters"<br/>   ‚Ä¢ Strength meter bar<br/>   ‚Ä¢ Show/hide eye icon<br/>   ‚Ä¢ Error div below (hidden)<br/><br/>üîí Confirm Password: [password input]<br/>   ‚Ä¢ Placeholder: "Re-enter password"<br/>   ‚Ä¢ Match indicator icon<br/>   ‚Ä¢ Error div below (hidden)<br/><br/>===== CHECKBOXES =====<br/>‚òëÔ∏è I agree to Educational Mission<br/>   ‚Ä¢ Link: "Learn about our mission"<br/>‚òëÔ∏è I accept Terms of Service<br/>   ‚Ä¢ Link: "Read full terms"<br/>‚òëÔ∏è Subscribe to newsletter (optional)<br/><br/>===== OPTIONAL SECTION =====<br/>üìù Full Name: [text input] (optional)<br/>üè¢ Organization: [text input] (optional)<br/>üåç Country: [dropdown select] (optional)<br/>üì∏ Profile Picture: [file upload] (optional)<br/><br/>===== BUTTONS =====<br/>‚Ä¢ "Create Account" (blue, disabled initially)<br/>‚Ä¢ "Already have account? Sign In" (link)<br/>‚Ä¢ "Continue as Guest" (gray link)]
    
    %% === REAL-TIME VALIDATION ===
    USER_TYPES[USER TYPES IN FIELDS<br/>===== REAL-TIME EVENTS =====<br/>Email onBlur:<br/>‚Ä¢ Check format: /^[^\s@]+@[^\s@]+\.[^\s@]+$/<br/>‚Ä¢ Show ‚úÖ or ‚ùå icon<br/>‚Ä¢ Display error if invalid<br/><br/>Username onKeyup (debounced 500ms):<br/>‚Ä¢ Check length 3-20 chars<br/>‚Ä¢ Check alphanumeric only<br/>‚Ä¢ API call: GET /api/auth/check-username<br/>‚Ä¢ Show availability status<br/><br/>Password onKeyup:<br/>‚Ä¢ Strength calculation:<br/>  - Length >= 8: +1<br/>  - Has uppercase: +1<br/>  - Has lowercase: +1<br/>  - Has number: +1<br/>  - Has special char: +1<br/>‚Ä¢ Update strength meter (1-5 bars)<br/>‚Ä¢ Colors: red(1-2), yellow(3), green(4-5)<br/><br/>Confirm Password onKeyup:<br/>‚Ä¢ Compare with password field<br/>‚Ä¢ Show ‚úÖ match or ‚ùå no match<br/><br/>Form Submission Button:<br/>‚Ä¢ Enabled only when all required valid<br/>‚Ä¢ Visual state changes (disabled ‚Üí enabled)]
    
    VALIDATION_STATE{ALL FIELDS VALID?<br/>Real-time validation passed?}
    
    SHOW_FIELD_ERRORS[DISPLAY FIELD ERRORS<br/>===== ERROR DISPLAY =====<br/>Email errors:<br/>‚Ä¢ "Please enter a valid email"<br/>‚Ä¢ "Email format incorrect"<br/><br/>Username errors:<br/>‚Ä¢ "Username too short (min 3 chars)"<br/>‚Ä¢ "Username too long (max 20 chars)"<br/>‚Ä¢ "Only letters and numbers allowed"<br/>‚Ä¢ "Username already taken"<br/><br/>Password errors:<br/>‚Ä¢ "Password too short (min 8 chars)"<br/>‚Ä¢ "Add uppercase letter"<br/>‚Ä¢ "Add number or special character"<br/><br/>Confirm errors:<br/>‚Ä¢ "Passwords do not match"<br/><br/>Checkbox errors:<br/>‚Ä¢ "Please accept the Terms of Service"<br/>‚Ä¢ "Please acknowledge our mission"<br/><br/>===== ERROR STYLING =====<br/>‚Ä¢ Red border on invalid fields<br/>‚Ä¢ Red text for error messages<br/>‚Ä¢ ‚ùå icon next to field<br/>‚Ä¢ Error animation: shake effect]
    
    %% === FORM SUBMISSION ===
    USER_SUBMITS[USER CLICKS "CREATE ACCOUNT"<br/>===== FORM SUBMISSION =====<br/>‚Ä¢ Prevent default form submit<br/>‚Ä¢ Show loading spinner on button<br/>‚Ä¢ Disable all form fields<br/>‚Ä¢ Change button text: "Creating Account..."<br/>‚Ä¢ Gather form data into JSON<br/>‚Ä¢ Add CSRF token from meta tag<br/><br/>===== API CALL =====<br/>POST /api/auth/register<br/>Headers:<br/>‚Ä¢ Content-Type: application/json<br/>‚Ä¢ X-CSRF-Token: [token]<br/>Body:<br/>{<br/>  "email": "user@email.com",<br/>  "username": "johndoe",<br/>  "password": "hashedClientSide",<br/>  "confirmPassword": "matching",<br/>  "agreeTerms": true,<br/>  "agreeMission": true,<br/>  "newsletter": false,<br/>  "fullName": "John Doe",<br/>  "organization": "University",<br/>  "country": "US"<br/>}<br/><br/>===== LOADING STATE =====<br/>‚Ä¢ Progress indicator<br/>‚Ä¢ Disable back/refresh<br/>‚Ä¢ Timeout: 30 seconds]
    
    %% === SERVER PROCESSING ===
    SERVER_VALIDATE[SERVER-SIDE VALIDATION<br/>===== INPUT SANITIZATION =====<br/>‚Ä¢ Strip HTML tags from all inputs<br/>‚Ä¢ Escape special characters<br/>‚Ä¢ Trim whitespace<br/>‚Ä¢ Length validation<br/><br/>===== FORMAT VALIDATION =====<br/>Email:<br/>‚Ä¢ RFC 5322 compliant regex<br/>‚Ä¢ DNS MX record check (optional)<br/>‚Ä¢ Disposable email detection<br/><br/>Username:<br/>‚Ä¢ Length: 3-20 characters<br/>‚Ä¢ Pattern: ^[a-zA-Z0-9_]+$<br/>‚Ä¢ Reserved words check<br/>‚Ä¢ Profanity filter<br/><br/>Password:<br/>‚Ä¢ Minimum 8 characters<br/>‚Ä¢ At least 1 uppercase<br/>‚Ä¢ At least 1 lowercase<br/>‚Ä¢ At least 1 number<br/>‚Ä¢ No common passwords (top 1000)<br/>‚Ä¢ No personal info (name, username)<br/><br/>===== SECURITY CHECKS =====<br/>‚Ä¢ Rate limiting: max 5 attempts/hour<br/>‚Ä¢ IP address validation<br/>‚Ä¢ CSRF token verification<br/>‚Ä¢ SQL injection prevention<br/>‚Ä¢ XSS protection<br/>‚Ä¢ User agent validation]
    
    VALIDATION_RESULT{SERVER VALIDATION<br/>PASSED?}
    
    RETURN_VALIDATION_ERROR[RETURN VALIDATION ERRORS<br/>===== ERROR RESPONSE =====<br/>HTTP 422 Unprocessable Entity<br/>Response Body:<br/>{<br/>  "success": false,<br/>  "errors": {<br/>    "email": ["Invalid email format"],<br/>    "username": ["Too short"],<br/>    "password": ["Too weak"]<br/>  },<br/>  "message": "Please fix the errors below"<br/>}<br/><br/>===== CLIENT ERROR DISPLAY =====<br/>‚Ä¢ Parse error response JSON<br/>‚Ä¢ Map errors to form fields<br/>‚Ä¢ Show specific error messages<br/>‚Ä¢ Highlight invalid fields<br/>‚Ä¢ Re-enable form for editing<br/>‚Ä¢ Focus on first error field<br/>‚Ä¢ Button text back to "Create Account"]
    
    %% === DUPLICATE CHECK ===
    CHECK_DUPLICATES[CHECK FOR DUPLICATES<br/>===== DATABASE QUERIES =====<br/>Query 1 - Email check:<br/>SELECT id FROM users<br/>WHERE email = ? AND deleted_at IS NULL<br/><br/>Query 2 - Username check:<br/>SELECT id FROM users<br/>WHERE username = ? AND deleted_at IS NULL<br/><br/>===== CASE SENSITIVITY =====<br/>‚Ä¢ Email: case-insensitive comparison<br/>‚Ä¢ Username: case-sensitive comparison<br/><br/>===== PERFORMANCE =====<br/>‚Ä¢ Use database indexes<br/>‚Ä¢ Combined query possible<br/>‚Ä¢ Response time < 100ms target]
    
    DUPLICATES_FOUND{DUPLICATES EXIST?<br/>Email or username taken?}
    
    RETURN_DUPLICATE_ERROR[RETURN DUPLICATE ERROR<br/>===== ERROR RESPONSE =====<br/>HTTP 409 Conflict<br/>Response Body:<br/>{<br/>  "success": false,<br/>  "errors": {<br/>    "email": ["Email already registered"],<br/>    "username": ["Username already taken"]<br/>  },<br/>  "message": "Account with this information exists",<br/>  "suggestions": {<br/>    "username": ["johndoe123", "johndoe456"],<br/>    "action": "Try signing in instead"<br/>  }<br/>}<br/><br/>===== CLIENT DISPLAY =====<br/>‚Ä¢ Show "Account exists" message<br/>‚Ä¢ Suggest alternative usernames<br/>‚Ä¢ "Sign In Instead" button<br/>‚Ä¢ Option to reset password<br/>‚Ä¢ Clear sensitive fields only]
    
    %% === ACCOUNT CREATION ===
    CREATE_ACCOUNT[CREATE USER ACCOUNT<br/>===== PASSWORD HASHING =====<br/>‚Ä¢ Generate salt: crypto.randomBytes(32)<br/>‚Ä¢ Hash password: bcrypt.hash(password, 12)<br/>‚Ä¢ Store hash, never plain password<br/><br/>===== TOKEN GENERATION =====<br/>‚Ä¢ Verification token: uuid4()<br/>‚Ä¢ Expiration: 24 hours from now<br/>‚Ä¢ Store in database<br/><br/>===== DATABASE INSERT =====<br/>INSERT INTO users (<br/>  email, username, password_hash,<br/>  email_verified, is_active,<br/>  verification_token, token_expires_at,<br/>  full_name, organization, country,<br/>  newsletter_subscribed,<br/>  subscription_tier, access_level,<br/>  created_at, updated_at<br/>) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)<br/><br/>===== INITIAL VALUES =====<br/>‚Ä¢ email_verified = FALSE<br/>‚Ä¢ is_active = FALSE<br/>‚Ä¢ subscription_tier = 'free'<br/>‚Ä¢ access_level = 'basic'<br/>‚Ä¢ created_at = NOW()<br/>‚Ä¢ ip_address = request.ip<br/>‚Ä¢ user_agent = request.headers.user_agent]
    
    ACCOUNT_CREATED[ACCOUNT CREATION SUCCESS<br/>===== DATABASE RESULT =====<br/>‚Ä¢ User ID generated (auto-increment)<br/>‚Ä¢ All fields saved successfully<br/>‚Ä¢ Transaction committed<br/>‚Ä¢ Audit log entry created<br/><br/>===== PREPARE USER SESSION =====<br/>‚Ä¢ Generate session token<br/>‚Ä¢ Set session expiration<br/>‚Ä¢ Prepare user object for response<br/><br/>===== ANALYTICS =====<br/>‚Ä¢ Log registration event<br/>‚Ä¢ Track signup source<br/>‚Ä¢ Update metrics counter<br/>‚Ä¢ Trigger welcome workflow]
    
    %% === EMAIL VERIFICATION PROCESS ===
    PREPARE_EMAIL[PREPARE VERIFICATION EMAIL<br/>===== EMAIL TEMPLATE =====<br/>Template: verification_email.html<br/>Variables:<br/>‚Ä¢ {user_name}: username or full name<br/>‚Ä¢ {verification_link}: unique URL<br/>‚Ä¢ {expiry_time}: "24 hours"<br/>‚Ä¢ {support_email}: support contact<br/>‚Ä¢ {company_name}: "AndyLibrary"<br/><br/>===== EMAIL CONTENT =====<br/>Subject: "Welcome to AndyLibrary - Verify Your Email"<br/>From: "AndyLibrary <noreply@andylibrary.com>"<br/>Reply-To: "support@andylibrary.com"<br/><br/>Body includes:<br/>‚Ä¢ Welcome message<br/>‚Ä¢ Verification button/link<br/>‚Ä¢ Manual verification code<br/>‚Ä¢ Expiration warning<br/>‚Ä¢ Support contact info<br/>‚Ä¢ Unsubscribe option<br/><br/>===== VERIFICATION URL =====<br/>https://andylibrary.com/verify-email?token={token}&user={user_id}<br/>‚Ä¢ Token: verification_token from database<br/>‚Ä¢ URL encoding for special characters<br/>‚Ä¢ HTTPS required for security]
    
    SEND_EMAIL[SEND VERIFICATION EMAIL<br/>===== SMTP CONFIGURATION =====<br/>Server: smtp.gmail.com<br/>Port: 465 (SSL) / 587 (TLS)<br/>Authentication: App Password<br/>Username: HimalayaProject1@gmail.com<br/>Password: [app-specific password]<br/><br/>===== EMAIL HEADERS =====<br/>From: "AndyLibrary <noreply@andylibrary.com>"<br/>To: user email address<br/>Subject: verification subject<br/>Content-Type: text/html; charset=UTF-8<br/>X-Mailer: AndyLibrary System<br/>Message-ID: unique identifier<br/><br/>===== DELIVERY SETTINGS =====<br/>‚Ä¢ Timeout: 30 seconds<br/>‚Ä¢ Retry attempts: 3<br/>‚Ä¢ Retry delay: exponential backoff<br/>‚Ä¢ Error logging enabled<br/>‚Ä¢ Delivery receipt requested<br/><br/>===== FALLBACK OPTIONS =====<br/>‚Ä¢ Secondary SMTP server<br/>‚Ä¢ Queue for retry if failed<br/>‚Ä¢ Admin notification on failure]
    
    EMAIL_RESULT{EMAIL SENT<br/>SUCCESSFULLY?}
    
    EMAIL_SUCCESS[EMAIL SENT SUCCESSFULLY<br/>===== SMTP RESPONSE =====<br/>‚Ä¢ Status: 250 OK<br/>‚Ä¢ Message-ID recorded<br/>‚Ä¢ Delivery timestamp logged<br/>‚Ä¢ Queue status: sent<br/><br/>===== DATABASE UPDATE =====<br/>UPDATE users SET<br/>  verification_email_sent = TRUE,<br/>  email_sent_at = NOW(),<br/>  email_attempts = email_attempts + 1<br/>WHERE id = user_id<br/><br/>===== SUCCESS METRICS =====<br/>‚Ä¢ Increment email success counter<br/>‚Ä¢ Log delivery time<br/>‚Ä¢ Update user journey stage]
    
    EMAIL_FAILURE[EMAIL SEND FAILED<br/>===== ERROR TYPES =====<br/>SMTP Errors:<br/>‚Ä¢ 421: Service not available<br/>‚Ä¢ 450: Mailbox unavailable<br/>‚Ä¢ 451: Local error<br/>‚Ä¢ 452: Insufficient storage<br/>‚Ä¢ 550: Mailbox not found<br/>‚Ä¢ 551: User not local<br/>‚Ä¢ 552: Exceeded storage<br/>‚Ä¢ 553: Invalid address<br/>‚Ä¢ 554: Transaction failed<br/><br/>Network Errors:<br/>‚Ä¢ Connection timeout<br/>‚Ä¢ DNS resolution failed<br/>‚Ä¢ SSL/TLS handshake failed<br/><br/>===== ERROR HANDLING =====<br/>‚Ä¢ Log detailed error message<br/>‚Ä¢ Update attempt counter<br/>‚Ä¢ Schedule retry if appropriate<br/>‚Ä¢ Notify administrators<br/>‚Ä¢ Update user record with failure]
    
    %% === REGISTRATION RESPONSE ===
    REGISTRATION_SUCCESS[REGISTRATION SUCCESS RESPONSE<br/>===== HTTP RESPONSE =====<br/>Status: 201 Created<br/>Headers:<br/>‚Ä¢ Content-Type: application/json<br/>‚Ä¢ Set-Cookie: session_token (httpOnly)<br/><br/>Response Body:<br/>{<br/>  "success": true,<br/>  "message": "Registration successful!",<br/>  "user": {<br/>    "id": 123,<br/>    "username": "johndoe",<br/>    "email": "john@example.com",<br/>    "emailVerified": false,<br/>    "isActive": false<br/>  },<br/>  "emailSent": true,<br/>  "nextStep": "verify_email",<br/>  "expiresIn": "24 hours"<br/>}<br/><br/>===== CLIENT ACTIONS =====<br/>‚Ä¢ Hide registration form<br/>‚Ä¢ Show success message<br/>‚Ä¢ Display email verification notice<br/>‚Ä¢ Start email check timer<br/>‚Ä¢ Enable "Resend Email" option after 5 min]
    
    REGISTRATION_PARTIAL[REGISTRATION PARTIAL SUCCESS<br/>===== HTTP RESPONSE =====<br/>Status: 201 Created<br/>Response Body:<br/>{<br/>  "success": true,<br/>  "message": "Account created successfully!",<br/>  "user": {user_object},<br/>  "emailSent": false,<br/>  "warning": "Email delivery failed",<br/>  "nextStep": "contact_support",<br/>  "supportEmail": "support@andylibrary.com",<br/>  "manualVerification": true<br/>}<br/><br/>===== CLIENT DISPLAY =====<br/>‚Ä¢ Show account created message<br/>‚Ä¢ Warning about email issue<br/>‚Ä¢ Manual verification instructions<br/>‚Ä¢ Support contact information<br/>‚Ä¢ Option to try resend email<br/>‚Ä¢ Temporary login capability]
    
    %% === EMAIL VERIFICATION PAGE ===
    SHOW_VERIFICATION_PAGE[DISPLAY EMAIL VERIFICATION PAGE<br/>===== PAGE LAYOUT =====<br/>Header: "Check Your Email"<br/>Icon: üìß (large, centered)<br/><br/>Main Content:<br/>"We've sent a verification email to:<br/>[user_email_display]<br/><br/>Please check your inbox and click the<br/>verification link to activate your account."<br/><br/>Instructions:<br/>‚Ä¢ "Check your spam/junk folder"<br/>‚Ä¢ "Email may take a few minutes"<br/>‚Ä¢ "Link expires in 24 hours"<br/><br/>===== ACTION BUTTONS =====<br/>‚Ä¢ "Resend Email" (disabled for 5 min)<br/>‚Ä¢ "Change Email Address"<br/>‚Ä¢ "Contact Support"<br/>‚Ä¢ "Continue as Guest"<br/><br/>===== STATUS INDICATORS =====<br/>‚Ä¢ Email countdown timer<br/>‚Ä¢ Resend cooldown timer<br/>‚Ä¢ Verification status check<br/>‚Ä¢ Auto-refresh every 30 seconds]
    
    USER_EMAIL_ACTIONS{USER ACTION?<br/>What does user choose?}
    
    RESEND_EMAIL[RESEND VERIFICATION EMAIL<br/>===== RATE LIMITING =====<br/>‚Ä¢ Check: max 3 emails per hour<br/>‚Ä¢ Check: min 5 minutes between sends<br/>‚Ä¢ Display cooldown timer<br/><br/>===== RESEND PROCESS =====<br/>‚Ä¢ Generate new verification token<br/>‚Ä¢ Invalidate previous token<br/>‚Ä¢ Update database expiration<br/>‚Ä¢ Send new email with same template<br/>‚Ä¢ Update attempt counter<br/><br/>===== USER FEEDBACK =====<br/>‚Ä¢ "Email resent successfully"<br/>‚Ä¢ Update sent timestamp<br/>‚Ä¢ Reset button cooldown<br/>‚Ä¢ Log resend attempt]
    
    CHECK_EMAIL[USER CHECKS EMAIL<br/>===== EMAIL RECEIPT =====<br/>User opens email client:<br/>‚Ä¢ Gmail, Outlook, Apple Mail, etc.<br/>‚Ä¢ Check inbox folder<br/>‚Ä¢ Check spam/junk folder<br/>‚Ä¢ Check promotions tab (Gmail)<br/><br/>===== EMAIL CONTENT DISPLAY =====<br/>Subject: "Welcome to AndyLibrary - Verify Your Email"<br/>From: "AndyLibrary <noreply@andylibrary.com>"<br/><br/>Email body shows:<br/>‚Ä¢ Welcome message with user name<br/>‚Ä¢ Large "Verify Email" button<br/>‚Ä¢ Alternative text link<br/>‚Ä¢ Manual verification code<br/>‚Ä¢ Expiration time remaining<br/>‚Ä¢ Support contact info]
    
    EMAIL_FOUND{EMAIL FOUND<br/>& RECEIVED?}
    
    CLICK_VERIFY_LINK[USER CLICKS VERIFICATION LINK<br/>===== LINK ACTION =====<br/>URL: https://andylibrary.com/verify-email?token=abc123&user=456<br/>‚Ä¢ Opens in default browser<br/>‚Ä¢ May open new tab/window<br/>‚Ä¢ Shows loading page briefly<br/><br/>===== REQUEST PROCESSING =====<br/>GET /verify-email<br/>Parameters:<br/>‚Ä¢ token: verification token<br/>‚Ä¢ user: user ID (optional)<br/>‚Ä¢ source: email (tracking)<br/><br/>===== SERVER VALIDATION =====<br/>‚Ä¢ Extract token from URL<br/>‚Ä¢ Validate token format<br/>‚Ä¢ Look up token in database<br/>‚Ä¢ Check expiration time<br/>‚Ä¢ Verify user association]
    
    %% === TOKEN VALIDATION ===
    VALIDATE_TOKEN[VALIDATE VERIFICATION TOKEN<br/>===== DATABASE QUERY =====<br/>SELECT id, username, email, verification_token,<br/>       token_expires_at, email_verified<br/>FROM users<br/>WHERE verification_token = ?<br/>  AND token_expires_at > NOW()<br/>  AND email_verified = FALSE<br/>  AND deleted_at IS NULL<br/><br/>===== VALIDATION CHECKS =====<br/>Token exists: Database record found<br/>Not expired: token_expires_at > current time<br/>Not used: email_verified = FALSE<br/>Valid format: UUID v4 format<br/>Not revoked: token not in revoked_tokens table<br/><br/>===== SECURITY MEASURES =====<br/>‚Ä¢ Log verification attempt<br/>‚Ä¢ Check for suspicious activity<br/>‚Ä¢ Rate limit verification attempts<br/>‚Ä¢ Prevent token enumeration attacks]
    
    TOKEN_VALID{TOKEN VALIDATION<br/>RESULT?}
    
    ACTIVATION_SUCCESS[ACTIVATE USER ACCOUNT<br/>===== DATABASE UPDATES =====<br/>UPDATE users SET<br/>  email_verified = TRUE,<br/>  is_active = TRUE,<br/>  verified_at = NOW(),<br/>  verification_token = NULL,<br/>  token_expires_at = NULL,<br/>  access_level = 'verified'<br/>WHERE id = user_id<br/><br/>===== SESSION CREATION =====<br/>‚Ä¢ Generate session token<br/>‚Ä¢ Set session expiration (7 days)<br/>‚Ä¢ Create session record<br/>‚Ä¢ Set authentication cookies<br/><br/>===== SUCCESS ACTIONS =====<br/>‚Ä¢ Log successful verification<br/>‚Ä¢ Update user metrics<br/>‚Ä¢ Trigger welcome email<br/>‚Ä¢ Initialize user preferences<br/>‚Ä¢ Create default folders/settings]
    
    SHOW_VERIFICATION_SUCCESS[SHOW VERIFICATION SUCCESS PAGE<br/>===== PAGE LAYOUT =====<br/>Header: "Email Verified Successfully! üéâ"<br/>Icon: ‚úÖ (large, green checkmark)<br/><br/>Success Message:<br/>"Congratulations! Your email has been verified<br/>and your account is now active."<br/><br/>Account Details:<br/>‚Ä¢ Username: [username]<br/>‚Ä¢ Email: [email] ‚úÖ Verified<br/>‚Ä¢ Account Status: Active<br/>‚Ä¢ Membership: Free Tier<br/><br/>===== NEXT STEPS =====<br/>"What would you like to do next?"<br/>‚Ä¢ "Browse Books" (primary button)<br/>‚Ä¢ "Complete Profile" (secondary)<br/>‚Ä¢ "Take a Tour" (link)<br/>‚Ä¢ "Go to Dashboard" (link)<br/><br/>===== AUTO-REDIRECT =====<br/>‚Ä¢ Countdown timer: "Redirecting in 10 seconds..."<br/>‚Ä¢ Auto-redirect to dashboard<br/>‚Ä¢ User can cancel auto-redirect]
    
    TOKEN_ERROR[TOKEN VALIDATION ERROR<br/>===== ERROR TYPES =====<br/>Token not found:<br/>‚Ä¢ "Invalid verification link"<br/>‚Ä¢ "Token may have been used already"<br/><br/>Token expired:<br/>‚Ä¢ "Verification link expired"<br/>‚Ä¢ "Links are valid for 24 hours"<br/><br/>Already verified:<br/>‚Ä¢ "Email already verified"<br/>‚Ä¢ "Account is active"<br/><br/>===== ERROR PAGE DISPLAY =====<br/>Header: "Verification Error"<br/>Icon: ‚ùå (red X)<br/>Error message based on type<br/><br/>===== RECOVERY OPTIONS =====<br/>‚Ä¢ "Request New Verification Email"<br/>‚Ä¢ "Sign In to Existing Account"<br/>‚Ä¢ "Contact Support"<br/>‚Ä¢ "Create New Account"<br/><br/>===== ACTION BUTTONS =====<br/>‚Ä¢ "Send New Email" (primary)<br/>‚Ä¢ "Go to Sign In" (secondary)<br/>‚Ä¢ "Get Help" (link)]
    
    %% === SIGN IN FLOW ===
    SHOW_SIGNIN_FORM[DISPLAY SIGN IN FORM<br/>===== FORM LAYOUT =====<br/>Header: "Welcome Back!"<br/>Subtitle: "Sign in to your account"<br/><br/>===== LOGIN FIELDS =====<br/>üìß Email or Username: [text input]<br/>   ‚Ä¢ Placeholder: "email or username"<br/>   ‚Ä¢ Autocomplete: username<br/>   ‚Ä¢ Remember last value<br/><br/>üîí Password: [password input]<br/>   ‚Ä¢ Placeholder: "Enter your password"<br/>   ‚Ä¢ Show/hide toggle<br/>   ‚Ä¢ Caps lock warning<br/><br/>===== OPTIONS =====<br/>‚òëÔ∏è Remember me (optional)<br/>   ‚Ä¢ Extends session to 30 days<br/>   ‚Ä¢ Stores in secure cookie<br/><br/>===== BUTTONS =====<br/>‚Ä¢ "Sign In" (blue, primary)<br/>‚Ä¢ "Forgot Password?" (link)<br/>‚Ä¢ "Create Account" (secondary)<br/>‚Ä¢ "Continue as Guest" (small link)<br/><br/>===== SOCIAL LOGIN =====<br/>"Or sign in with:"<br/>‚Ä¢ Google OAuth button<br/>‚Ä¢ GitHub OAuth button<br/>‚Ä¢ Microsoft OAuth button<br/><br/>===== SECURITY FEATURES =====<br/>‚Ä¢ CSRF protection<br/>‚Ä¢ Rate limiting display<br/>‚Ä¢ Login attempt counter<br/>‚Ä¢ Captcha after 3 failed attempts]
    
    %% === MAIN APPLICATION ===
    MAIN_DASHBOARD[MAIN APPLICATION DASHBOARD<br/>===== HEADER BAR =====<br/>‚Ä¢ AndyLibrary logo (clickable)<br/>‚Ä¢ Search bar (global)<br/>‚Ä¢ Notifications bell (red dot if new)<br/>‚Ä¢ User avatar dropdown:<br/>  - Profile Settings<br/>  - My Books<br/>  - Reading History<br/>  - Account Settings<br/>  - Sign Out<br/><br/>===== MAIN CONTENT =====<br/>Welcome Section:<br/>‚Ä¢ "Welcome back, [username]!"<br/>‚Ä¢ Last login time<br/>‚Ä¢ Account status indicator<br/><br/>Quick Actions:<br/>‚Ä¢ "Browse Books" (large button)<br/>‚Ä¢ "My Library" (personal collection)<br/>‚Ä¢ "Continue Reading" (recent books)<br/>‚Ä¢ "Recommendations" (AI suggested)<br/><br/>===== SIDEBAR =====<br/>Categories:<br/>‚Ä¢ Science & Technology<br/>‚Ä¢ Literature & Arts<br/>‚Ä¢ History & Social Studies<br/>‚Ä¢ Mathematics<br/>‚Ä¢ Languages<br/>‚Ä¢ Professional Development<br/><br/>===== FOOTER =====<br/>‚Ä¢ Support links<br/>‚Ä¢ Privacy policy<br/>‚Ä¢ Terms of service<br/>‚Ä¢ Version info]
    
    %% === GUEST BROWSE FLOW ===
    GUEST_BROWSE[GUEST BROWSE MODE<br/>===== LIMITED ACCESS =====<br/>Header: "Browsing as Guest"<br/>‚Ä¢ Limited search results (first 10)<br/>‚Ä¢ No book downloads<br/>‚Ä¢ No personal library<br/>‚Ä¢ Registration prompts<br/><br/>===== AVAILABLE FEATURES =====<br/>‚Ä¢ Browse book categories<br/>‚Ä¢ View book descriptions<br/>‚Ä¢ Read sample pages<br/>‚Ä¢ Search functionality (limited)<br/><br/>===== CONVERSION PROMPTS =====<br/>‚Ä¢ "Register for full access"<br/>‚Ä¢ "Download requires account"<br/>‚Ä¢ "Save books to personal library"<br/>‚Ä¢ Exit-intent popup<br/><br/>===== TRACKING =====<br/>‚Ä¢ Track guest activities<br/>‚Ä¢ Popular books for guests<br/>‚Ä¢ Conversion funnel metrics<br/>‚Ä¢ A/B test registration prompts]
    
    %% === MAIN FLOW CONNECTIONS ===
    START --> LOAD_ASSETS
    LOAD_ASSETS --> CHECK_SESSION
    CHECK_SESSION --> SESSION_DECISION
    
    SESSION_DECISION -->|YES - Valid Session| MAIN_DASHBOARD
    SESSION_DECISION -->|NO - No Session| SHOW_LANDING
    
    SHOW_LANDING --> AUTH_CHOICE
    AUTH_CHOICE -->|REGISTER CLICKED| SHOW_REGISTER_FORM
    AUTH_CHOICE -->|SIGN IN CLICKED| SHOW_SIGNIN_FORM
    AUTH_CHOICE -->|GUEST BROWSE CLICKED| GUEST_BROWSE
    
    SHOW_REGISTER_FORM --> USER_TYPES
    USER_TYPES --> VALIDATION_STATE
    VALIDATION_STATE -->|INVALID| SHOW_FIELD_ERRORS
    VALIDATION_STATE -->|VALID| USER_SUBMITS
    SHOW_FIELD_ERRORS --> USER_TYPES
    
    USER_SUBMITS --> SERVER_VALIDATE
    SERVER_VALIDATE --> VALIDATION_RESULT
    VALIDATION_RESULT -->|FAILED| RETURN_VALIDATION_ERROR
    VALIDATION_RESULT -->|PASSED| CHECK_DUPLICATES
    RETURN_VALIDATION_ERROR --> SHOW_FIELD_ERRORS
    
    CHECK_DUPLICATES --> DUPLICATES_FOUND
    DUPLICATES_FOUND -->|YES| RETURN_DUPLICATE_ERROR
    DUPLICATES_FOUND -->|NO| CREATE_ACCOUNT
    RETURN_DUPLICATE_ERROR --> SHOW_FIELD_ERRORS
    
    CREATE_ACCOUNT --> ACCOUNT_CREATED
    ACCOUNT_CREATED --> PREPARE_EMAIL
    PREPARE_EMAIL --> SEND_EMAIL
    SEND_EMAIL --> EMAIL_RESULT
    EMAIL_RESULT -->|SUCCESS| EMAIL_SUCCESS
    EMAIL_RESULT -->|FAILED| EMAIL_FAILURE
    
    EMAIL_SUCCESS --> REGISTRATION_SUCCESS
    EMAIL_FAILURE --> REGISTRATION_PARTIAL
    REGISTRATION_SUCCESS --> SHOW_VERIFICATION_PAGE
    REGISTRATION_PARTIAL --> SHOW_VERIFICATION_PAGE
    
    SHOW_VERIFICATION_PAGE --> USER_EMAIL_ACTIONS
    USER_EMAIL_ACTIONS -->|RESEND EMAIL| RESEND_EMAIL
    USER_EMAIL_ACTIONS -->|CHECK EMAIL| CHECK_EMAIL
    USER_EMAIL_ACTIONS -->|CHANGE EMAIL| SHOW_REGISTER_FORM
    USER_EMAIL_ACTIONS -->|CONTACT SUPPORT| GUEST_BROWSE
    
    RESEND_EMAIL --> SEND_EMAIL
    CHECK_EMAIL --> EMAIL_FOUND
    EMAIL_FOUND -->|YES| CLICK_VERIFY_LINK
    EMAIL_FOUND -->|NO| RESEND_EMAIL
    
    CLICK_VERIFY_LINK --> VALIDATE_TOKEN
    VALIDATE_TOKEN --> TOKEN_VALID
    TOKEN_VALID -->|VALID| ACTIVATION_SUCCESS
    TOKEN_VALID -->|INVALID| TOKEN_ERROR
    
    ACTIVATION_SUCCESS --> SHOW_VERIFICATION_SUCCESS
    SHOW_VERIFICATION_SUCCESS --> MAIN_DASHBOARD
    TOKEN_ERROR --> SHOW_VERIFICATION_PAGE
    
    %% === STYLING ===
    classDef startEndClass fill:#e1f5fe,stroke:#01579b,stroke-width:3px,color:#000000,font-weight:bold
    classDef pageClass fill:#f3e5f5,stroke:#4a148c,stroke-width:2px,color:#000000,font-weight:bold
    classDef processClass fill:#fff3e0,stroke:#e65100,stroke-width:2px,color:#000000,font-weight:bold
    classDef decisionClass fill:#e8f5e8,stroke:#2e7d32,stroke-width:2px,color:#000000,font-weight:bold
    classDef errorClass fill:#ffebee,stroke:#c62828,stroke-width:2px,color:#000000,font-weight:bold
    classDef successClass fill:#f1f8e9,stroke:#33691e,stroke-width:2px,color:#000000,font-weight:bold
    classDef userActionClass fill:#fce4ec,stroke:#880e4f,stroke-width:2px,color:#000000,font-weight:bold
    
    class START,MAIN_DASHBOARD startEndClass
    class SHOW_LANDING,SHOW_REGISTER_FORM,SHOW_SIGNIN_FORM,SHOW_VERIFICATION_PAGE,SHOW_VERIFICATION_SUCCESS pageClass
    class LOAD_ASSETS,CHECK_SESSION,SERVER_VALIDATE,CHECK_DUPLICATES,CREATE_ACCOUNT,PREPARE_EMAIL,SEND_EMAIL,VALIDATE_TOKEN processClass
    class SESSION_DECISION,AUTH_CHOICE,VALIDATION_STATE,VALIDATION_RESULT,DUPLICATES_FOUND,EMAIL_RESULT,EMAIL_FOUND,TOKEN_VALID,USER_EMAIL_ACTIONS decisionClass
    class SHOW_FIELD_ERRORS,RETURN_VALIDATION_ERROR,RETURN_DUPLICATE_ERROR,EMAIL_FAILURE,TOKEN_ERROR errorClass
    class ACCOUNT_CREATED,EMAIL_SUCCESS,REGISTRATION_SUCCESS,ACTIVATION_SUCCESS successClass
    class USER_TYPES,USER_SUBMITS,CHECK_EMAIL,CLICK_VERIFY_LINK,RESEND_EMAIL userActionClass
